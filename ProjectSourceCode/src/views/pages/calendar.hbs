<!DOCTYPE html>
<html lang='en'>
  <head>
    <meta charset='utf-8' />
    <script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.15/index.global.min.js'></script>
    <script>
		document.addEventListener('DOMContentLoaded', function() {
		var calendarEl = document.getElementById('calendar');
		var calendar = new FullCalendar.Calendar(calendarEl, {
			initialView: 'dayGridMonth',
			headerToolbar: { 
				center: 'dayGridMonth,timeGridWeek,addEventButton'
			}, // buttons for switching between views
			customButtons: {
				addEventButton: {
					text: 'addEvent...',
					click: function() {
						// prompt a form that asks for title, date, time, description too
						document.getElementById('addEventModal').style.display = 'block';
					}
				}
			},
			views: {
				dayGridMonth: { // name of view
					titleFormat: { year: 'numeric', month: '2-digit', day: '2-digit' }
				}
			}
		});
			calendar.render();

			// handle modal form submission
			document.getElementById('submit-form').addEventListener('click', function(event) {
				event.preventDefault(); // Prevent the form from refreshing the page

				const eventForm = document.getElementById('eventForm');
				if (eventForm.checkValidity()) { // checks if all required fields are met
					const formData = new FormData(eventForm);

					// Get form data
					const title = formData.get('title');
					// const dateStr = document.getElementById('date').value;
					const description = formData.get('description');

					const dateStr = formData.get('date');
					const date = new Date(dateStr);
					
					if (!isNaN(date.valueOf())) { // valid?

						// Create event object
						const newEvent = {
						title: title,
						start: date, // FullCalendar requires ISO 8601 date strings
						description: description,
						// allDay: true
						};

						// Add the event to the calendar
						calendar.addEvent(newEvent);

						// now we need to update the database
						fetch('/addEvent', {
							method: 'POST',
							headers: {
								'Content-Type': 'application/json'
							},
							body: JSON.stringify(newEvent)
						})
							.then(response => {
								if(response.ok) {
									alert('Event successfully added to the database!');
								} else { 
									throw new Error('Failed to save event to the database.')
								}
							})
							.catch(error => {
								console.error('Error saving event to the database.')
							})

						// Reset the form
						eventForm.reset();

						// Hide the modal
						document.getElementById('addEventModal').style.display = 'none';

						console.log('Event added:', newEvent);

					} else {
						alert('Invalid date.');
					}
				} else {
					alert('Please fill out all required fields.');
				}
			});

			// btn to close form data
			function closeModal() {
				document.getElementById('addEventModal').style.display = 'none';
			}
			document.getElementById('close-modal').addEventListener('click', closeModal);
		});


    </script>
  </head>
  <body>
    <div id='calendar'></div>

	<div class="modal" id="addEventModal" tabindex="-1" style="display:none;">
		<div class="modal-dialog">
			<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title">Add Event</h5>
			</div>
			<div class="modal-body">
				<form id="eventForm">
					<label for="title">Event Title:</label><br>
					<input type="text" name="title" placeholder="Title of event" required> <br><br>

					<label for="date">Date:</label><br>
					<input type="date" name="date" placeholder="Format YYYY-MM-DD" required> <br><br>
					
					<label for="description">Description:</label><br>
					<input type="text" name="description" placeholder="Description" required> <br><br>	
				</form>
			</div>
			<div class="modal-footer">
				<button id="close-modal" type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
				<button id="submit-form" type="submit" class="btn btn-primary">Add Event</button>
			</div>
			</div>
		</div>
	</div>
  </body>
</html>